Search.setIndex({"alltitles":{"Contents:":[[0,null]],"Module contents":[[2,"module-pyfoma"],[3,"module-pyfoma.private"]],"PyFoma documentation":[[0,null]],"Submodules":[[2,"submodules"],[3,"submodules"]],"Subpackages":[[2,"subpackages"]],"pyfoma":[[1,null]],"pyfoma package":[[2,null]],"pyfoma.algorithms module":[[2,"module-pyfoma.algorithms"]],"pyfoma.cfg module":[[2,"pyfoma-cfg-module"]],"pyfoma.eliminate_flags module":[[2,"module-pyfoma.eliminate_flags"]],"pyfoma.flag module":[[2,"module-pyfoma.flag"]],"pyfoma.fst module":[[2,"module-pyfoma.fst"]],"pyfoma.paradigm module":[[2,"module-pyfoma.paradigm"]],"pyfoma.private package":[[3,null]],"pyfoma.private.partition_refinement module":[[3,"module-pyfoma.private.partition_refinement"]],"pyfoma.private.regexparse module":[[3,"module-pyfoma.private.regexparse"]]},"docnames":["index","modules","pyfoma","pyfoma.private"],"envversion":{"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.viewcode":1},"filenames":["index.rst","modules.rst","pyfoma.rst","pyfoma.private.rst"],"indexentries":{"add_transition() (pyfoma.fst.state method)":[[2,"pyfoma.fst.State.add_transition",false]],"add_weight() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.add_weight",false]],"added_weight() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.added_weight",false]],"all_epsilon_targets_cheapest() (pyfoma.fst.state method)":[[2,"pyfoma.fst.State.all_epsilon_targets_cheapest",false]],"all_targets() (pyfoma.fst.state method)":[[2,"pyfoma.fst.State.all_targets",false]],"all_targets_cheapest() (pyfoma.fst.state method)":[[2,"pyfoma.fst.State.all_targets_cheapest",false]],"all_transitions() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.all_transitions",false]],"all_transitions() (pyfoma.fst.state method)":[[2,"pyfoma.fst.State.all_transitions",false]],"all_transitions_by_label() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.all_transitions_by_label",false]],"alphabet (pyfoma.fst.fst attribute)":[[2,"pyfoma.fst.FST.alphabet",false]],"analyze() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.analyze",false]],"apply() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.apply",false]],"become() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.become",false]],"character_ranges() (pyfoma.fst.fst class method)":[[2,"pyfoma.fst.FST.character_ranges",false]],"check() (pyfoma.flag.flagop method)":[[2,"pyfoma.flag.FlagOp.check",false]],"check() (pyfoma.flag.flagstreamfilter method)":[[2,"pyfoma.flag.FlagStreamFilter.check",false]],"check_graphviz_installed() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.check_graphviz_installed",false]],"cleanup_sigma() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.cleanup_sigma",false]],"complement() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.complement",false]],"complement() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.complement",false]],"compose() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.compose",false]],"compose() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.compose",false]],"concatenate() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.concatenate",false]],"concatenate() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.concatenate",false]],"context_restrict() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.context_restrict",false]],"context_restricted() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.context_restricted",false]],"copy_filtered() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.copy_filtered",false]],"copy_mod() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.copy_mod",false]],"create_reverse_index() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.create_reverse_index",false]],"create_reverse_index() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.create_reverse_index",false]],"cross_product() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.cross_product",false]],"cross_product() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.cross_product",false]],"determinize() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.determinize",false]],"determinize_as_dfa() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.determinize_as_dfa",false]],"determinize_unweighted() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.determinize_unweighted",false]],"determinized() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.determinized",false]],"determinized_as_dfa() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.determinized_as_dfa",false]],"determinized_unweighted() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.determinized_unweighted",false]],"difference() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.difference",false]],"difference() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.difference",false]],"dijkstra() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.dijkstra",false]],"dijkstra() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.dijkstra",false]],"eliminate_flags() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.eliminate_flags",false]],"eliminate_flags() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.eliminate_flags",false]],"eliminate_fst_flags() (in module pyfoma.eliminate_flags)":[[2,"pyfoma.eliminate_flags.eliminate_fst_flags",false]],"empty_restr() (in module pyfoma.eliminate_flags)":[[2,"pyfoma.eliminate_flags.empty_restr",false]],"epsilon_closure() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.epsilon_closure",false]],"epsilon_closure() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.epsilon_closure",false]],"epsilon_remove() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.epsilon_remove",false]],"epsilon_removed() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.epsilon_removed",false]],"equivalent() (in module pyfoma.eliminate_flags)":[[2,"pyfoma.eliminate_flags.equivalent",false]],"filter_accessible() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.filter_accessible",false]],"filter_coaccessible() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.filter_coaccessible",false]],"filter_flags() (pyfoma.flag.flagop static method)":[[2,"pyfoma.flag.FlagOp.filter_flags",false]],"filtered_accessible() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.filtered_accessible",false]],"filtered_coaccessible() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.filtered_coaccessible",false]],"finalstates (pyfoma.fst.fst attribute)":[[2,"pyfoma.fst.FST.finalstates",false]],"find_sourcestates() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.find_sourcestates",false]],"find_sourcestates() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.find_sourcestates",false]],"flagfilter (class in pyfoma.flag)":[[2,"pyfoma.flag.FlagFilter",false]],"flagop (class in pyfoma.flag)":[[2,"pyfoma.flag.FlagOp",false]],"flagstreamfilter (class in pyfoma.flag)":[[2,"pyfoma.flag.FlagStreamFilter",false]],"flagstringfilter (class in pyfoma.flag)":[[2,"pyfoma.flag.FlagStringFilter",false]],"from_strings() (pyfoma.fst.fst class method)":[[2,"pyfoma.fst.FST.from_strings",false]],"fst (class in pyfoma.fst)":[[2,"pyfoma.fst.FST",false]],"generate() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.generate",false]],"get_value_tests() (in module pyfoma.eliminate_flags)":[[2,"pyfoma.eliminate_flags.get_value_tests",false]],"ignore() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.ignore",false]],"ignore() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.ignore",false]],"initialstate (pyfoma.fst.fst attribute)":[[2,"pyfoma.fst.FST.initialstate",false]],"intersection() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.intersection",false]],"intersection() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.intersection",false]],"invert() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.invert",false]],"inverted() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.inverted",false]],"is_flag() (pyfoma.flag.flagop static method)":[[2,"pyfoma.flag.FlagOp.is_flag",false]],"kleene_closure() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.kleene_closure",false]],"kleene_closure() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.kleene_closure",false]],"kleene_plus() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.kleene_plus",false]],"kleene_star() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.kleene_star",false]],"label (pyfoma.fst.transition attribute)":[[2,"pyfoma.fst.Transition.label",false]],"label_states_topology() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.label_states_topology",false]],"labelled_states_topology() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.labelled_states_topology",false]],"load() (pyfoma.fst.fst class method)":[[2,"pyfoma.fst.FST.load",false]],"map_labels() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.map_labels",false]],"mapped_labels() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.mapped_labels",false]],"merge_equivalent_states() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.merge_equivalent_states",false]],"merging_equivalent_states() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.merging_equivalent_states",false]],"minimize() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.minimize",false]],"minimize_as_dfa() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.minimize_as_dfa",false]],"minimize_brz() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.minimize_brz",false]],"minimized() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.minimized",false]],"minimized_as_dfa() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.minimized_as_dfa",false]],"minimized_brz() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.minimized_brz",false]],"module":[[2,"module-pyfoma",false],[2,"module-pyfoma.algorithms",false],[2,"module-pyfoma.eliminate_flags",false],[2,"module-pyfoma.flag",false],[2,"module-pyfoma.fst",false],[2,"module-pyfoma.paradigm",false]],"neg_check() (pyfoma.flag.flagop method)":[[2,"pyfoma.flag.FlagOp.neg_check",false]],"new_func() (in module pyfoma)":[[2,"pyfoma.new_func",false]],"number_unnamed_states() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.number_unnamed_states",false]],"optional() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.optional",false]],"optional() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.optional",false]],"paradigm (class in pyfoma.paradigm)":[[2,"pyfoma.paradigm.Paradigm",false]],"product() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.product",false]],"product() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.product",false]],"project() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.project",false]],"projected() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.projected",false]],"push_weights() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.push_weights",false]],"pushed_weights() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.pushed_weights",false]],"pyfoma":[[2,"module-pyfoma",false]],"pyfoma.algorithms":[[2,"module-pyfoma.algorithms",false]],"pyfoma.eliminate_flags":[[2,"module-pyfoma.eliminate_flags",false]],"pyfoma.flag":[[2,"module-pyfoma.flag",false]],"pyfoma.fst":[[2,"module-pyfoma.fst",false]],"pyfoma.paradigm":[[2,"module-pyfoma.paradigm",false]],"re() (in module pyfoma.fst)":[[2,"pyfoma.fst.re",false]],"re() (pyfoma.fst.fst class method)":[[2,"pyfoma.fst.FST.re",false]],"regex() (pyfoma.fst.fst class method)":[[2,"pyfoma.fst.FST.regex",false]],"remove_transitions_to_targets() (pyfoma.fst.state method)":[[2,"pyfoma.fst.State.remove_transitions_to_targets",false]],"rename_label() (pyfoma.fst.state method)":[[2,"pyfoma.fst.State.rename_label",false]],"render() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.render",false]],"reset() (pyfoma.flag.flagstreamfilter method)":[[2,"pyfoma.flag.FlagStreamFilter.reset",false]],"reverse() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.reverse",false]],"reverse_e() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.reverse_e",false]],"reversed() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.reversed",false]],"reversed_e() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.reversed_e",false]],"rewrite() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.rewrite",false]],"rewritten() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.rewritten",false]],"rlg() (pyfoma.fst.fst class method)":[[2,"pyfoma.fst.FST.rlg",false]],"save() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.save",false]],"save_att() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.save_att",false]],"scc() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.scc",false]],"scc() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.scc",false]],"set_any() (in module pyfoma.eliminate_flags)":[[2,"pyfoma.eliminate_flags.set_any",false]],"set_neg() (in module pyfoma.eliminate_flags)":[[2,"pyfoma.eliminate_flags.set_neg",false]],"set_pos() (in module pyfoma.eliminate_flags)":[[2,"pyfoma.eliminate_flags.set_pos",false]],"setv() (pyfoma.flag.flagop method)":[[2,"pyfoma.flag.FlagOp.setv",false]],"state (class in pyfoma.fst)":[[2,"pyfoma.fst.State",false]],"states (pyfoma.fst.fst attribute)":[[2,"pyfoma.fst.FST.states",false]],"substitute_no_val_flags() (in module pyfoma.eliminate_flags)":[[2,"pyfoma.eliminate_flags.substitute_no_val_flags",false]],"targetstate (pyfoma.fst.transition attribute)":[[2,"pyfoma.fst.Transition.targetstate",false]],"test_call() (pyfoma.flag.testflagop method)":[[2,"pyfoma.flag.TestFlagOp.test_call",false]],"test_init() (pyfoma.flag.testflagfilter method)":[[2,"pyfoma.flag.TestFlagFilter.test_init",false]],"test_init() (pyfoma.flag.testflagop method)":[[2,"pyfoma.flag.TestFlagOp.test_init",false]],"test_init_non_flag() (pyfoma.flag.testflagop method)":[[2,"pyfoma.flag.TestFlagOp.test_init_non_flag",false]],"test_is_flag() (pyfoma.flag.testflagop method)":[[2,"pyfoma.flag.TestFlagOp.test_is_flag",false]],"test_neg() (pyfoma.eliminate_flags.testvalueflags method)":[[2,"pyfoma.eliminate_flags.TestValueFlags.test_neg",false]],"test_pos() (pyfoma.eliminate_flags.testvalueflags method)":[[2,"pyfoma.eliminate_flags.TestValueFlags.test_pos",false]],"test_stream() (pyfoma.flag.testflagfilter method)":[[2,"pyfoma.flag.TestFlagFilter.test_stream",false]],"test_strings_neg() (pyfoma.flag.testflagfilter method)":[[2,"pyfoma.flag.TestFlagFilter.test_strings_neg",false]],"test_strings_pos() (pyfoma.flag.testflagfilter method)":[[2,"pyfoma.flag.TestFlagFilter.test_strings_pos",false]],"testflagfilter (class in pyfoma.flag)":[[2,"pyfoma.flag.TestFlagFilter",false]],"testflagop (class in pyfoma.flag)":[[2,"pyfoma.flag.TestFlagOp",false]],"testvalueflags (class in pyfoma.eliminate_flags)":[[2,"pyfoma.eliminate_flags.TestValueFlags",false]],"time_flag_execution() (in module pyfoma.flag)":[[2,"pyfoma.flag.time_flag_execution",false]],"todict() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.todict",false]],"tojs() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.tojs",false]],"tokenize_against_alphabet() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.tokenize_against_alphabet",false]],"transition (class in pyfoma.fst)":[[2,"pyfoma.fst.Transition",false]],"transitionsin (pyfoma.fst.state property)":[[2,"pyfoma.fst.State.transitionsin",false]],"transitionsout (pyfoma.fst.state property)":[[2,"pyfoma.fst.State.transitionsout",false]],"trim() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.trim",false]],"trimmed() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.trimmed",false]],"unify() (pyfoma.flag.flagop method)":[[2,"pyfoma.flag.FlagOp.unify",false]],"union() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.union",false]],"union() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.union",false]],"value_restr() (in module pyfoma.eliminate_flags)":[[2,"pyfoma.eliminate_flags.value_restr",false]],"view() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.view",false]],"weight (pyfoma.fst.transition attribute)":[[2,"pyfoma.fst.Transition.weight",false]],"words() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.words",false]],"words_cheapest() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.words_cheapest",false]],"words_cheapest() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.words_cheapest",false]],"words_nbest() (in module pyfoma.algorithms)":[[2,"pyfoma.algorithms.words_nbest",false]],"words_nbest() (pyfoma.fst.fst method)":[[2,"pyfoma.fst.FST.words_nbest",false]]},"objects":{"":[[2,0,0,"-","pyfoma"]],"pyfoma":[[2,0,0,"-","algorithms"],[2,0,0,"-","eliminate_flags"],[2,0,0,"-","flag"],[2,0,0,"-","fst"],[2,1,1,"","new_func"],[2,0,0,"-","paradigm"],[3,0,0,"-","private"]],"pyfoma.algorithms":[[2,1,1,"","added_weight"],[2,1,1,"","complement"],[2,1,1,"","compose"],[2,1,1,"","concatenate"],[2,1,1,"","context_restricted"],[2,1,1,"","create_reverse_index"],[2,1,1,"","cross_product"],[2,1,1,"","determinized"],[2,1,1,"","determinized_as_dfa"],[2,1,1,"","determinized_unweighted"],[2,1,1,"","difference"],[2,1,1,"","dijkstra"],[2,1,1,"","eliminate_flags"],[2,1,1,"","epsilon_closure"],[2,1,1,"","epsilon_removed"],[2,1,1,"","filtered_accessible"],[2,1,1,"","filtered_coaccessible"],[2,1,1,"","find_sourcestates"],[2,1,1,"","ignore"],[2,1,1,"","intersection"],[2,1,1,"","inverted"],[2,1,1,"","kleene_closure"],[2,1,1,"","kleene_plus"],[2,1,1,"","kleene_star"],[2,1,1,"","labelled_states_topology"],[2,1,1,"","mapped_labels"],[2,1,1,"","merging_equivalent_states"],[2,1,1,"","minimized"],[2,1,1,"","minimized_as_dfa"],[2,1,1,"","minimized_brz"],[2,1,1,"","optional"],[2,1,1,"","product"],[2,1,1,"","projected"],[2,1,1,"","pushed_weights"],[2,1,1,"","reversed"],[2,1,1,"","reversed_e"],[2,1,1,"","rewritten"],[2,1,1,"","scc"],[2,1,1,"","trimmed"],[2,1,1,"","union"],[2,1,1,"","words_cheapest"],[2,1,1,"","words_nbest"]],"pyfoma.eliminate_flags":[[2,2,1,"","TestValueFlags"],[2,1,1,"","eliminate_fst_flags"],[2,1,1,"","empty_restr"],[2,1,1,"","equivalent"],[2,1,1,"","get_value_tests"],[2,1,1,"","set_any"],[2,1,1,"","set_neg"],[2,1,1,"","set_pos"],[2,1,1,"","substitute_no_val_flags"],[2,1,1,"","value_restr"]],"pyfoma.eliminate_flags.TestValueFlags":[[2,3,1,"","test_neg"],[2,3,1,"","test_pos"]],"pyfoma.flag":[[2,2,1,"","FlagFilter"],[2,2,1,"","FlagOp"],[2,2,1,"","FlagStreamFilter"],[2,2,1,"","FlagStringFilter"],[2,2,1,"","TestFlagFilter"],[2,2,1,"","TestFlagOp"],[2,1,1,"","time_flag_execution"]],"pyfoma.flag.FlagOp":[[2,3,1,"","check"],[2,3,1,"","filter_flags"],[2,3,1,"","is_flag"],[2,3,1,"","neg_check"],[2,3,1,"","setv"],[2,3,1,"","unify"]],"pyfoma.flag.FlagStreamFilter":[[2,3,1,"","check"],[2,3,1,"","reset"]],"pyfoma.flag.TestFlagFilter":[[2,3,1,"","test_init"],[2,3,1,"","test_stream"],[2,3,1,"","test_strings_neg"],[2,3,1,"","test_strings_pos"]],"pyfoma.flag.TestFlagOp":[[2,3,1,"","test_call"],[2,3,1,"","test_init"],[2,3,1,"","test_init_non_flag"],[2,3,1,"","test_is_flag"]],"pyfoma.fst":[[2,2,1,"","FST"],[2,2,1,"","State"],[2,2,1,"","Transition"],[2,1,1,"","re"]],"pyfoma.fst.FST":[[2,3,1,"","add_weight"],[2,3,1,"","all_transitions"],[2,3,1,"","all_transitions_by_label"],[2,4,1,"","alphabet"],[2,3,1,"","analyze"],[2,3,1,"","apply"],[2,3,1,"","become"],[2,3,1,"","character_ranges"],[2,3,1,"","check_graphviz_installed"],[2,3,1,"","cleanup_sigma"],[2,3,1,"","complement"],[2,3,1,"","compose"],[2,3,1,"","concatenate"],[2,3,1,"","context_restrict"],[2,3,1,"","copy_filtered"],[2,3,1,"","copy_mod"],[2,3,1,"","create_reverse_index"],[2,3,1,"","cross_product"],[2,3,1,"","determinize"],[2,3,1,"","determinize_as_dfa"],[2,3,1,"","determinize_unweighted"],[2,3,1,"","difference"],[2,3,1,"","dijkstra"],[2,3,1,"","eliminate_flags"],[2,3,1,"","epsilon_closure"],[2,3,1,"","epsilon_remove"],[2,3,1,"","filter_accessible"],[2,3,1,"","filter_coaccessible"],[2,4,1,"","finalstates"],[2,3,1,"","find_sourcestates"],[2,3,1,"","from_strings"],[2,3,1,"","generate"],[2,3,1,"","ignore"],[2,4,1,"","initialstate"],[2,3,1,"","intersection"],[2,3,1,"","invert"],[2,3,1,"","kleene_closure"],[2,3,1,"","label_states_topology"],[2,3,1,"","load"],[2,3,1,"","map_labels"],[2,3,1,"","merge_equivalent_states"],[2,3,1,"","minimize"],[2,3,1,"","minimize_as_dfa"],[2,3,1,"","minimize_brz"],[2,3,1,"","number_unnamed_states"],[2,3,1,"","optional"],[2,3,1,"","product"],[2,3,1,"","project"],[2,3,1,"","push_weights"],[2,3,1,"","re"],[2,3,1,"","regex"],[2,3,1,"","render"],[2,3,1,"","reverse"],[2,3,1,"","reverse_e"],[2,3,1,"","rewrite"],[2,3,1,"","rlg"],[2,3,1,"","save"],[2,3,1,"","save_att"],[2,3,1,"","scc"],[2,4,1,"","states"],[2,3,1,"","todict"],[2,3,1,"","tojs"],[2,3,1,"","tokenize_against_alphabet"],[2,3,1,"","trim"],[2,3,1,"","union"],[2,3,1,"","view"],[2,3,1,"","words"],[2,3,1,"","words_cheapest"],[2,3,1,"","words_nbest"]],"pyfoma.fst.State":[[2,3,1,"","add_transition"],[2,3,1,"","all_epsilon_targets_cheapest"],[2,3,1,"","all_targets"],[2,3,1,"","all_targets_cheapest"],[2,3,1,"","all_transitions"],[2,3,1,"","remove_transitions_to_targets"],[2,3,1,"","rename_label"],[2,5,1,"","transitionsin"],[2,5,1,"","transitionsout"]],"pyfoma.fst.Transition":[[2,4,1,"","label"],[2,4,1,"","targetstate"],[2,4,1,"","weight"]],"pyfoma.paradigm":[[2,2,1,"","Paradigm"]],"pyfoma.private":[[3,0,0,"-","partition_refinement"],[3,0,0,"-","regexparse"]],"pyfoma.private.partition_refinement":[[3,2,1,"","PartitionRefinement"]],"pyfoma.private.partition_refinement.PartitionRefinement":[[3,3,1,"","astuples"],[3,3,1,"","refine"]],"pyfoma.private.regexparse":[[3,2,1,"","RegexParse"]],"pyfoma.private.regexparse.RegexParse":[[3,4,1,"","builtins"],[3,3,1,"","character_class_parse"],[3,3,1,"","compile"],[3,4,1,"","operands"],[3,4,1,"","operators"],[3,3,1,"","parse"],[3,4,1,"","precedence"],[3,4,1,"","shortops"],[3,3,1,"","tokenize"],[3,4,1,"","unarypost"],[3,4,1,"","unarypre"]]},"objnames":{"0":["py","module","Python module"],"1":["py","function","Python function"],"2":["py","class","Python class"],"3":["py","method","Python method"],"4":["py","attribute","Python attribute"],"5":["py","property","Python property"]},"objtypes":{"0":"py:module","1":"py:function","2":"py:class","3":"py:method","4":"py:attribute","5":"py:property"},"terms":{"":[2,3],"0":2,"1":[2,3],"10":3,"11":3,"122":3,"146":2,"160":2,"1972":2,"2":[2,3],"2007":3,"3":3,"5":3,"6":3,"65":3,"7":3,"9":3,"97":3,"A":[2,3],"AT":2,"And":3,"By":2,"If":[2,3],"No":2,"Not":3,"The":2,"To":2,"Will":2,"_":[2,3],"__init__":2,"accept":2,"acceptor":2,"access":2,"achiev":3,"ad":2,"add":[0,2],"add_transit":[1,2],"add_weight":[1,2],"added_weight":[1,2],"addit":2,"algorithm":1,"all":[2,3],"all_epsilon_targets_cheapest":[1,2],"all_target":[1,2],"all_targets_cheapest":[1,2],"all_transit":[1,2],"all_transitions_by_label":[1,2],"allow":2,"alphabet":[1,2],"also":2,"alwai":2,"an":[2,3],"analyz":[1,2],"ani":[2,3],"appli":[1,2],"appreci":3,"ar":2,"aren":2,"arg":2,"argument":2,"around":2,"astupl":[2,3],"attent":3,"attribut":2,"automat":2,"automaton":2,"b":2,"base":[2,3],"basic":[2,3],"beauti":3,"becaus":3,"becom":[1,2],"behavior":2,"below":2,"better":3,"bf":2,"bool":2,"both":2,"breadth":2,"brian":3,"broken":3,"brzozowski":2,"built":2,"builtin":[2,3],"calcul":2,"call":2,"caller":[2,3],"can":2,"cfg":1,"chang":[2,3],"char_class":3,"charact":[2,3],"character_class_pars":[2,3],"character_rang":[1,2],"charclass":3,"cheapest":2,"check":[1,2],"check_graphviz_instal":[1,2],"class":[2,3],"classmethod":2,"cleanup_sigma":[1,2],"clear":3,"coaccess":2,"code":[2,3],"combin":2,"comma":3,"common":2,"compat":2,"compil":[2,3],"complement":[1,2,3],"complex":3,"compon":2,"compos":[1,2,3],"composit":2,"comput":2,"concat":3,"concaten":[1,2],"condit":2,"config":2,"configur":2,"connect":2,"constrain":2,"construct":2,"contain":2,"content":1,"context":[2,3],"context_restrict":[1,2,3],"control":2,"convert":3,"copi":2,"copy_filt":[1,2],"copy_mod":[1,2],"cost":2,"cp":3,"cpoption":3,"creat":[2,3],"create_reverse_index":[1,2],"cross":2,"cross_product":[1,2],"current":[2,3],"d":3,"default":2,"defin":[2,3],"depth":2,"det":2,"detail":0,"determin":[1,2,3],"determinize_as_dfa":[1,2],"determinize_unweight":[1,2],"determinized_as_dfa":[1,2],"determinized_unweight":[1,2],"df":2,"dfa":2,"diacrit":2,"diactrit":2,"dict":[2,3],"dictionari":2,"differ":[1,2],"digraph":2,"dijkstra":[1,2,3],"dim":2,"directli":2,"disabl":2,"displai":2,"do":2,"doc":2,"doesn":3,"domain":2,"don":[2,3],"done":2,"down":3,"e":[2,3],"each":[2,3],"edsger":2,"edu":3,"educ":3,"elimin":2,"eliminate_flag":1,"eliminate_fst_flag":[1,2],"em":3,"empti":2,"empty_restr":[1,2],"ensur":2,"enumer":2,"environ":2,"eppstein":3,"epsilon":[2,3],"epsilon_closur":[1,2],"epsilon_remov":[1,2],"equival":[1,2],"equivalenceclass":2,"escap":2,"etc":2,"even":[2,3],"exampl":2,"except":2,"exist":3,"expand":2,"export":2,"express":2,"extens":2,"fail":2,"fals":2,"field":2,"file":2,"filenam":2,"filter":2,"filter_access":[1,2],"filter_coaccess":[1,2],"filter_flag":[1,2],"filtered_access":[1,2],"filtered_coaccess":[1,2],"final":2,"finalf":2,"finalst":[1,2],"finalweight":2,"find":2,"find_sourcest":[1,2],"finit":2,"first":2,"fla":2,"flag":1,"flagfilt":[1,2],"flagop":[1,2],"flagstreamfilt":[1,2],"flagstringfilt":[1,2],"flip":2,"float":2,"fly":2,"foma":2,"foma_apply_down":2,"forc":2,"form":2,"format":2,"free":2,"from":2,"from_str":[1,2],"frozenset":2,"fsm":2,"fst":[1,3],"fst1":2,"fst2":2,"func":3,"function":[2,3],"g":[2,3],"gener":[1,2,3],"get":[2,3],"get_value_test":[1,2],"given":2,"go":2,"grammar":2,"graph":2,"graphviz":2,"great":3,"ha":2,"hacki":2,"hard":3,"have":[2,3],"helper":2,"henri":3,"here":2,"hfst":2,"hop":2,"hopcroft":2,"http":[2,3],"i":[2,3],"ic":3,"id":2,"ignor":[1,2,3],"implement":[2,3],"inclu":2,"includ":2,"index":2,"initi":2,"initialst":[1,2],"input":[2,3],"instanc":2,"intersect":[1,2,3],"interven":2,"invalid":2,"invers":2,"invert":[1,2,3],"is_flag":[1,2],"ish":2,"isym":2,"iter":[2,3],"its":3,"j":2,"javascript":2,"journal":2,"jsnetnam":2,"json":2,"jupyt":2,"kernighan":3,"keyerror":2,"keyword":2,"kleene_closur":[1,2],"kleene_plu":[1,2],"kleene_star":[1,2],"kwarg":2,"l1":2,"l_n":2,"label":[1,2],"label_states_topologi":[1,2],"labelfilt":2,"labelled_states_topologi":[1,2],"lambda":[2,3],"last":2,"lexc":2,"librari":2,"lie":3,"like":2,"linear":2,"list":[2,3],"load":[1,2],"longer":2,"lot":3,"lparen":3,"mai":2,"make":3,"map":2,"map_label":[1,2],"mapped_label":[1,2],"margin":2,"match":2,"matter":3,"mayb":2,"mechan":2,"member":2,"merg":2,"merge_equivalent_st":[1,2],"merging_equivalent_st":[1,2],"methodnam":2,"min":2,"minim":[1,2,3],"minimize_as_dfa":[1,2],"minimize_brz":[1,2],"minimized_as_dfa":[1,2],"minimized_brz":[1,2],"minu":3,"miss":2,"mode":2,"modifi":[2,3],"modlabel":2,"modul":1,"modweight":2,"multichar_symbol":2,"must":2,"mutat":2,"myfst":2,"myfunc":2,"mynet":2,"n":2,"name":2,"need":[2,3],"neg_check":[1,2],"negat":2,"network":2,"new":2,"new_func":[1,2],"newli":3,"next":2,"non":2,"none":2,"notabl":2,"note":2,"number":2,"number_unnamed_st":[1,2],"obey_flag":2,"object":[2,3],"one":2,"onli":2,"open":2,"openfst":2,"oper":[2,3],"operand":[2,3],"oplu":2,"optim":2,"option":[1,2,3],"order":2,"org":2,"origin":2,"osym":2,"other":2,"otherwis":2,"out":2,"output":[2,3],"over":2,"packag":[0,1],"pad":3,"pair":[2,3],"pairup":3,"paradigm":1,"parallel":2,"param":[2,3],"paramet":2,"pare":3,"pars":[2,3],"part":2,"partit":3,"partition_refin":[1,2],"partitionrefin":[2,3],"pass":2,"path":2,"pathfollow":2,"pathlik":2,"pdf":2,"perfectli":3,"perform":[2,3],"pleas":2,"plu":[2,3],"png":2,"po":2,"point":2,"polish":3,"possibli":2,"post":2,"preced":[2,3],"print":2,"print_flag":2,"privat":[1,2],"process":2,"produc":2,"product":[1,2],"proj":2,"project":[1,2,3],"properti":2,"push":2,"push_weight":[1,2],"pushed_weight":[1,2],"put":[2,3],"py":3,"python":2,"quot":2,"r":2,"r1":2,"r_n":2,"rais":2,"rang":[2,3],"raw":2,"re":[1,2],"reachabl":2,"read":2,"recommend":2,"referenc":2,"refin":[2,3],"regardless":2,"regex":[1,2],"regexfilt":2,"regexpars":[1,2],"regular":2,"regularexpress":[2,3],"relabel":2,"remov":2,"remove_transitions_to_target":[1,2],"rename_label":[1,2],"render":[1,2],"requir":[2,3],"reset":[1,2],"restrict":3,"restructuredtext":0,"result":[2,3],"retain":2,"return":[2,3],"reveng":3,"revers":[1,2,3],"reverse_":[1,2],"reversed_":[1,2],"rewrit":[1,2,3],"rewritten":[1,2,3],"ride":3,"right":2,"rlg":[1,2],"rparen":3,"runtest":2,"rustfst":2,"save":[1,2],"save_att":[1,2],"scc":[1,2],"search":2,"see":[0,2],"self":2,"sell":3,"separ":2,"seq":2,"sequenc":2,"sequenti":2,"set":[2,3],"set_ani":[1,2],"set_neg":[1,2],"set_po":[1,2],"setv":[1,2],"shortop":[2,3],"should":2,"show":2,"show_alphabet":2,"show_weight":2,"shunt":3,"siam":2,"similarli":2,"simplic":3,"sinc":2,"singl":2,"so":2,"sort":2,"sourc":[2,3],"sourcest":2,"speak":3,"specif":3,"spencer":3,"ssym":2,"star":[2,3],"start":2,"startsymbol":2,"state":[1,2],"state_symbol":2,"staterep":2,"stateset":2,"static":2,"str":2,"stream":3,"string":2,"strongli":2,"submodul":1,"subpackag":1,"subset":2,"substitut":2,"substitute_no_val_flag":[1,2],"svg":2,"sym":2,"symbol":[2,3],"syntax":0,"t":[2,3],"t1":2,"t1t2":2,"t2":2,"tab":2,"tabl":2,"tagfilt":2,"take":2,"tape":2,"target":2,"targetst":[1,2],"tarjan":2,"tediou":3,"test":2,"test_cal":[1,2],"test_init":[1,2],"test_init_non_flag":[1,2],"test_is_flag":[1,2],"test_neg":[1,2],"test_po":[1,2],"test_stream":[1,2],"test_strings_neg":[1,2],"test_strings_po":[1,2],"testcas":2,"testflagfilt":[1,2],"testflagop":[1,2],"testvalueflag":[1,2],"thei":2,"them":[2,3],"thi":2,"those":[2,3],"though":[2,3],"through":[2,3],"tight":2,"time_flag_execut":[1,2],"todict":[1,2],"togeth":3,"toggel":2,"toggl":2,"toj":[1,2],"token":[2,3],"tokenize_against_alphabet":[1,2],"tokenize_output":2,"tool":2,"topolog":2,"tough":3,"toward":2,"transduc":2,"transit":[1,2],"transitionsin":[1,2],"transitionsout":[1,2],"treat":2,"trial":2,"trick":2,"trim":[1,2],"true":2,"tupl":[2,3],"two":[2,3],"type":2,"typic":2,"uci":3,"unambigu":3,"unarypost":[2,3],"unarypr":[2,3],"unformat":2,"unicod":2,"unifi":[1,2],"uninstruct":3,"union":[1,2,3],"unreach":2,"unweight":2,"upto":2,"us":[0,2,3],"val":2,"valid":2,"valu":2,"value_restr":[1,2],"var":2,"var_op_v":2,"variabl":[2,3],"version":3,"view":[1,2],"virtu":3,"vowel":2,"we":[2,3],"weight":[1,2,3],"what":2,"when":2,"whenev":2,"where":2,"whether":2,"which":2,"while":3,"whitespac":2,"who":3,"within":3,"without":2,"word":[1,2],"words_cheapest":[1,2],"words_nbest":[1,2],"work":3,"wors":3,"would":2,"write":3,"www":3,"x":2,"y":2,"yai":2,"yield":2,"you":[2,3],"your":0,"za":3,"zero":2},"titles":["PyFoma documentation","pyfoma","pyfoma package","pyfoma.private package"],"titleterms":{"algorithm":2,"cfg":2,"content":[0,2,3],"document":0,"eliminate_flag":2,"flag":2,"fst":2,"modul":[2,3],"packag":[2,3],"paradigm":2,"partition_refin":3,"privat":3,"pyfoma":[0,1,2,3],"regexpars":3,"submodul":[2,3],"subpackag":2}})